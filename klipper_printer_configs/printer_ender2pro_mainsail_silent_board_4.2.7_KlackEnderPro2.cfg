# This file contains pin mappings for the Creality "v4.2.7" board running on
# a Ender 2 Pro.
# To use this config, during "make menuconfig" select the STM32F103 with
# a "28KiB bootloader" and serial (on USART1 PA10/PA9) communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PB9
dir_pin: PC2
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
# rotation_distance: 39.98001
endstop_pin: ^PA5
position_endstop: -15
position_min: -15
position_max: 165
homing_speed: 100
# KlackEnder Probe
#position_max: 250 #Your printhead have to move all the way to the right to pickup the probe. If your screw collides with the metal plate, simply flip it around.

[stepper_y]
step_pin: PB7
dir_pin: PB8
enable_pin: !PC3
microsteps: 16
# rotation_distance: 40
rotation_distance: 39.7
endstop_pin: ^PA6
position_min: -5
position_endstop: -5
position_max: 165
homing_speed: 100

[stepper_z]
step_pin: PB5
dir_pin: !PB6
enable_pin: !PC3
microsteps: 16
# rotation_distance: 8
# rotation_distance: 7.92
rotation_distance: 7.99128
position_max: 180
homing_speed: 10
# KlackEnder Probe
# endstop_pin: ^PA7
endstop_pin: probe:z_virtual_endstop #if you want to use the Prove as z-endstop (You can unsinstall the stock z endstop then. If not, remove the [homing_override])
# position_endstop: 0.0 #remove this or uncomment it with a #
position_min: -8 # set a negative value (minimum as the probe z_offset)

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB3
dir_pin: PB4
enable_pin: !PC3
microsteps: 16
rotation_distance: 23.4045849
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
#pid_Kp: 29.634
#pid_Ki: 2.102
#pid_Kd: 104.459
# PID parameters: pid_Kp=28.358 pid_Ki=1.734 pid_Kd=115.913
# PID parameters: pid_Kp=27.731 pid_Ki=1.712 pid_Kd=112.312
# PID parameters: pid_Kp=27.328 pid_Ki=1.656 pid_Kd=112.727
#pid_Kp: 27.328
#pid_Ki: 1.656
#pid_kd: 112.727
min_temp: 0
max_temp: 250
# Pressure Advance seemed to round corners, possibly need it off or a very small value
# 0.036 - 0.039 calculated
# pressure_advance = 0.036
# pressure_advance = 0.1804
# pressure_advance = 0.072
pressure_advance = 0.55

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# PID parameters: pid_Kp=74.383 pid_Ki=1.626 pid_Kd=850.756
# PID parameters: pid_Kp=74.758 pid_Ki=1.634 pid_Kd=855.043
# PID parameters: pid_Kp=75.136 pid_Ki=1.659 pid_Kd=850.919
#pid_Kp: 75.136
#pid_Ki: 1.659
#pid_Kd: 850.919
min_temp: 0
max_temp: 80

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3500
max_z_velocity: 20 #15 #10
max_z_accel: 100

[display]
lcd_type: st7920
cs_pin: PB12
sclk_pin: PB13
sid_pin: PB15
encoder_pins: ^PB14, ^PB10 #^PB14, ^PA3
click_pin: ^!PB2

[filament_switch_sensor filament_sensor]
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#switch_pin:
# switch_pin: !PC6
switch_pin: ^PA4
# switch_pin: !PC15
#   The pin on which the switch is connected. This parameter must be
#   provided.

[output_pin beeper]
pin: PC6

## Accelerometer Configuration for input_shaper
# https://www.klipper3d.org/Measuring_Resonances.html
# https://www.ifixit.com/Guide/Adding+ADXL345+Accelerometer/147745
# https://klipper.discourse.group/t/raspberry-pi-pico-adxl345-portable-resonance-measurement/1757
# https://www.reddit.com/r/klippers/comments/xqzpj1/how_to_wire_my_adxl343_correctly_to_my_raspberry/

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

#[adxl345]
# cs_pin: rpi:None
#cs_pin: adx1:gpio1
#spi_bus: spi0a
#axes_map: x,z,y

#[adxl345 hotend]
# Assuming `hotend` chip is connected to an RPi
#cs_pin: rpi:None
# cs_pin: host:None

#[adxl345 bed]
# Assuming `bed` chip is connected to a printer MCU board
# cs_pin: ...  # Printer board SPI chip select (CS) pin
#cs_pin: rpi:None
# cs_pin: host:None

[resonance_tester]
# accel_chip: adxl345
accel_chip_x: adxl345 hotend
accel_chip_y: adxl345 bed
probe_points:
  # Somewhere slightly above the middle of your print bed
  60,120, 20

[input_shaper]
# Recomputed with dual fans
# Going with = 80 mm/s as that was the max speed that Moonraker reported
# Should have been at 100 mm/s
#
# X:
# at 80 mm/s:  39.86710963
# at 100 mm/s: 49.83388704
# at 100 mm/s: 86.9565 # New
#
# Y:
# at 80 mm/s:  71.30124777 # Works?
# at 100 mm/s: 89.12655971
# at 100 mm/s: 97.7995 # New
#

# shaper_freq_x: 49.8339  # frequency for the X mark of the test model
# shaper_freq_y: 97.7995  # frequency for the Y mark of the test model
# shaper_type: mzv

# New 10 Aug 2023
shaper_freq_x: 56.10098177  # frequency for the X mark of the test model
shaper_freq_y: 84.88063660  # frequency for the Y mark of the test model
shaper_type: mzv

[board_pins]
aliases:
  EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
  EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
  PROBE_IN=PB0,PROBE_OUT=PB1,FIL_RUNOUT=PC6

## ---------------------------------------------------------------------------##
## GCODE Macros
## https://github.com/strayr/strayr-k-macros/blob/main/linear_advance.cfg
# This is useful with slicers that kan send an M900 pressure advance instruction
# It's just a wrapper around SET_PRESSURE_ADVANCE

[gcode_macro M900]
description: Set Linear Advance
gcode:
  {% if 'K' in params %}
    SET_PRESSURE_ADVANCE ADVANCE={params.K|string}
    { action_respond_info("Pressure Advance set to " + params.K|string) }
  {% else %}
    SET_PRESSURE_ADVANCE
  {% endif %}

[gcode_macro M0]
description: Set Linear Advance
gcode:
  PAUSE

[gcode_macro AUTOMATIC_CALIBRATION]
description: Run all automatic calibration Codes
gcode:
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=7000
  SET_VELOCITY_LIMIT ACCEL=4000
  G28
  G1 X75 Y75 Z1
  PID_CALIBRATE HEATER=extruder TARGET=208
  PID_CALIBRATE HEATER=heater_bed TARGET=60
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=58
  G28
  G29
  # SAVE_CONFIG

[gcode_macro TUNING_TOWER_INPUT_SHAPER]
description: Setup a Tuning Tower Print
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=58
  G28
  G29
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=7000
  SET_PRESSURE_ADVANCE ADVANCE=0
  SET_INPUT_SHAPER SHAPER_TYPE=MZV
  TUNING_TOWER COMMAND=SET_VELOCITY_LIMIT PARAMETER=ACCEL START=6500 STEP_DELTA=500 STEP_HEIGHT=5

##################################
## Add this to your printer.cfg ##
##################################
#####################################################################
# KlackEnder- Settings
#####################################################################

# !! Change your Z endstop pin from 'endstop_pin: Pin123' to 'endstop_pin: probe:z_virtual_endstop'
# !! Also add in [stepper_y] 'position_min: -8'. Idk why but most configs mave this wrong. For the Stock Ender 3 the homed Y position is -8.

[probe]
pin: ^PA7 #^PC14 #Probe-Stop Connection on Skr Mini E3 V1.2
#z_offset = 2.240 # 2.105 #2.4 #2.450 #0 #Measure per your specific setup
x_offset: -4 # negative = left of the nozzle
y_offset: 21 # negative = in front of of the nozzle
speed: 5.0
lift_speed: 15.0
sample_retract_dist: 1
samples: 2
samples_tolerance_retries: 6

##[(7x7)-1] / 2 = 24
##[(5x5)-1] / 2 = 12
[bed_mesh]
speed: 300
horizontal_move_z: 4 #2
mesh_min: 16,16
mesh_max: 155,155
# probe_count: 5,5
probe_count: 6,6
# relative_reference_index: 12 # Deprecated
algorithm: bicubic
fade_start: 1
fade_end: 10
#fade_target:
#   The z position in which fade should converge. When this value is set
#   to a non-zero value it must be within the range of z-values in the mesh.
#   Users that wish to converge to the z homing position should set this to 0.
#   Default is the average z value of the mesh.
split_delta_z: 0.015
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
move_check_distance: 3
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
mesh_pps: 4,4
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.

[delayed_gcode bed_mesh_init]
initial_duration: .01
gcode:
  BED_MESH_PROFILE LOAD=default

[homing_override]
set_position_z:0 # Make printer think Z axis is at zero, so we can force a move upwards away from build plate
axes:z # We only want to override homing the z-axis
gcode:
  G90
  G1 Z10 F3000 ; move up to prevent accidentally scratching build plate
  G28 X
  G28 Y
  PROBE_OUT
  G1 X80 Y60 F6000
  G28 Z
  PROBE_IN

##For Dual Z setups only!! (with independent motors, no Y splitters or dual Z port on board!)##
#[z_tilt]
#z_positions:
#  25,117
#  210,117
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the X, Y position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
#points:
#  4,96.5
#  219,96.5
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
#speed: 100
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 15
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#retries: 10
#   Number of times to retry if the probed points aren't within
#   tolerance.
#retry_tolerance: 0.01
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.

#####################################################################
# KlackEnder- Macros
#####################################################################

[gcode_macro PROBE_OUT]
gcode:
  G90
  G1 X-15 F4000
  G4 P300
  G1 Z15
  G1 X20 #X0

[gcode_macro PROBE_IN]
gcode:
  G90
  G1 Z20
  G1 X-15 F20000
  G1 Y-5
  G1 Z0
  G4 P300
  G1 X100 F6000 # 35 130 Move right to catch the probe
  G1 Z10
  G1 X20 #X0 #X20

[gcode_macro AUTO_BED_MESH]
gcode:
  PROBE_OUT
  G1 Z15
  G1 X25
  BED_MESH_CALIBRATE
  #G1 Y0 F20000
  PROBE_IN

[gcode_macro G29]
gcode:
  PROBE_OUT
  G1 Z15
  G1 X25
  BED_MESH_CALIBRATE
  #G1 Y0 F20000
  PROBE_IN

[gcode_macro Accuracy_Test]
gcode:
  PROBE_OUT
  G1 Z15
  G1 X25
  G90
  G1 Y80 X80 F20000
  PROBE_ACCURACY
  PROBE_IN

[gcode_macro AUTO_Z_TILT_ADJUST]
gcode:
  PROBE_OUT
  Z_TILT_ADJUST
  PROBE_IN


#####################################################################
# KlackEnder- Menu - Only if you have a display installed!
#####################################################################

[menu __main]
type: list
name: Main

[menu __main __KlackEnder]
type: list
enable: True
name: KlackEnder

[menu __main __KlackEnder __ProbeOut]
type: command
name: Probe Out
gcode:
  PROBE_OUT

[menu __main __KlackEnder __ProbeIn]
type: command
name: Probe In
gcode:
  PROBE_IN

[menu __main __KlackEnder __AutoBedMesh]
type: command
name: Auto Bed Mesh
gcode:
  G28
  AUTO_BED_MESH

## ---------------------------------------------------------------------------##
## Mainsail parts of the config

## Client klipper macro definitions
##
## Copyright (C) 2022 Alex Zellner <alexander.zellner@googlemail.com>
##
## This file may be distributed under the terms of the GNU GPLv3 license
##
## !!! This file is read-only. Maybe the used editor indicates that. !!!
##
## Customization:
##   1) copy the gcode_macro _CLIENT_VARIABLE (see below) to your printer.cfg
##   2) remove the comment mark (#) from all lines
##   3) change any value in there to your needs
##
## Use the PAUSE macro direct in your M600:
##  e.g. with a different park position front left and a minimal height of 50
##    [gcode_macro M600]
##    description: Filament change
##    gcode: PAUSE X=10 Y=10 Z_MIN=50
##  Z_MIN will park the toolhead at a minimum of 50 mm above to bed to make it easier for you to swap filament.
##
## Client variable macro for your printer.cfg
#[gcode_macro _CLIENT_VARIABLE]
#variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
#variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
#variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 1.0   ; the value to retract while PAUSE
#variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
#variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
#variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract  : False ; use fw_retraction instead of the manual version [True/False]
#gcode:

# variable_park_at_cancel: True
# variable_park_at_cancel_x: 30
# variable_park_at_cancel_y: 30

[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set allow_park = False if not macro_found
                 else False if client.park_at_cancel is not defined
                 else True  if client.park_at_cancel|lower == 'true'
                 else False %}
  {% set retract = 5.0  if not macro_found else client.cancel_retract|default(5.0)|abs %}
  ##### define park position #####
  {% set park_x = ""                                    if not macro_found
             else ""                                    if client.park_at_cancel_x is not defined
             else "X=" + client.park_at_cancel_x|string if client.park_at_cancel_x is not none %}
  {% set park_y = ""                                    if not macro_found
             else ""                                    if client.park_at_cancel_y is not defined
             else "Y=" + client.park_at_cancel_y|string if client.park_at_cancel_y is not none %}
  {% set custom_park = True if (park_x|length > 0 or park_y|length > 0) else False %}
  ##### end of definitions #####
  {% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
  _CLIENT_RETRACT LENGTH={retract}
  TURN_OFF_HEATERS
  M106 S0
  # clear pause_next_layer and pause_at_layer as preparation for next print
  SET_PAUSE_NEXT_LAYER ENABLE=0
  SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{printer[printer.toolhead.extruder].target}"

  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
variable_last_extruder_temp: 0
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set sp_move        = velocity if not macro_found else client.speed_move|default(velocity) %}
  ##### end of definitions #####
  M109 S{last_extruder_temp}

  _CLIENT_EXTRUDE
  RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}

# Usage: SET_PAUSE_NEXT_LAYER [ENABLE=[0|1]] [MACRO=<name>]
[gcode_macro SET_PAUSE_NEXT_LAYER]
description: Enable a pause if the next layer is reached
gcode:
  {% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
  {% set ENABLE = params.ENABLE | default(1) | int != 0 %}
  {% set MACRO = params.MACRO | default(pause_next_layer.call, True) %}
  SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

# Usage: SET_PAUSE_AT_LAYER [ENABLE=[0|1]] [LAYER=<number>] [MACRO=<name>]
[gcode_macro SET_PAUSE_AT_LAYER]
description: Enable/disable a pause if a given layer number is reached
gcode:
  {% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
  {% set ENABLE = params.ENABLE | int != 0 if params.ENABLE is defined
             else params.LAYER is defined %}
  {% set LAYER = params.LAYER | default(pause_at_layer.layer) | int %}
  {% set MACRO = params.MACRO | default(pause_at_layer.call, True) %}
  SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

# Usage: SET_PRINT_STATS_INFO [TOTAL_LAYER=<total_layer_count>] [CURRENT_LAYER= <current_layer>]
[gcode_macro SET_PRINT_STATS_INFO]
rename_existing: SET_PRINT_STATS_INFO_BASE
description: Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer: { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer  : { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode:
  {% if pause_next_layer.enable %}
    {action_respond_info("%s, forced by pause_next_layer" % pause_next_layer.call)}
    {pause_next_layer.call} ; execute the given gcode to pause, should be either M600 or PAUSE
    SET_PAUSE_NEXT_LAYER ENABLE=0
  {% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
    {action_respond_info("%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer))}
    {pause_at_layer.call} ; execute the given gcode to pause, should be either M600 or PAUSE
    SET_PAUSE_AT_LAYER ENABLE=0
  {% endif %}
  SET_PRINT_STATS_INFO_BASE {rawparams}

##### internal use #####
[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set use_custom     = False if not macro_found
                     else False if client.use_custom_pos is not defined
                     else True  if client.use_custom_pos|lower == 'true'
                     else False %}
  {% set custom_park_x  = 0.0 if not macro_found else client.custom_park_x|default(0.0) %}
  {% set custom_park_y  = 0.0 if not macro_found else client.custom_park_y|default(0.0) %}
  {% set park_dz        = 2.0 if not macro_found else client.custom_park_dz|default(2.0)|abs %}
  {% set sp_hop         = 900  if not macro_found else client.speed_hop|default(15) * 60 %}
  {% set sp_move        = velocity * 60 if not macro_found else client.speed_move|default(velocity) * 60 %}
  ##### get config and toolhead values #####
  {% set origin    = printer.gcode_move.homing_origin %}
  {% set act       = printer.gcode_move.gcode_position %}
  {% set max       = printer.toolhead.axis_maximum %}
  {% set cone      = printer.toolhead.cone_start_z|default(max.z) %} ; height as long the toolhead can reach max and min of an delta
  {% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
                else False %}
  ##### define park position #####
  {% set z_min = params.Z_MIN|default(0)|float %}
  {% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
  {% set x_park = params.X       if params.X is defined
             else custom_park_x  if use_custom
             else 0.0            if round_bed
             else (max.x - 5.0) %}
  {% set y_park = params.Y       if params.Y is defined
             else custom_park_y  if use_custom
             else (max.y - 5.0)  if round_bed and z_park < cone
             else 0.0            if round_bed
             else (max.y - 5.0) %}
  ##### end of definitions #####
  _CLIENT_RETRACT
  {% if "xyz" in printer.toolhead.homed_axes %}
    G90
    G1 Z{z_park} F{sp_hop}
    G1 X{x_park} Y{y_park} F{sp_move}
    {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description: Extrudes, if the extruder is hot enough
gcode:
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set use_fw_retract = False if not macro_found
                     else False if client.use_fw_retract is not defined
                     else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
                     else False %}

  {% set length = (params.LENGTH|float) if params.LENGTH is defined
             else 1.0 if not macro_found
             else client.unretract|default(1.0) %}

  {% set speed = params.SPEED if params.SPEED is defined
            else 35 if not macro_found
            else client.speed_unretract|default(35) %}

  {% set absolute_extrude = printer.gcode_move.absolute_extrude %}

  {% if printer.extruder.can_extrude %}
    {% if use_fw_retract %}
      {% if length < 0 %}
        G10
      {% else %}
        G11
      {% endif %}
    {% else %}
      M83
      G1 E{length} F{(speed|float|abs) * 60}
      {% if absolute_extrude %}
        M82
      {% endif %}
    {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

[gcode_macro _CLIENT_RETRACT]
description: Retracts, if the extruder is hot enough
gcode:
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}

  {% set length = (params.LENGTH|float) if params.LENGTH is defined
             else 1.0 if not macro_found
             else client.retract|default(1.0) %}

  {% set speed = params.SPEED if params.SPEED is defined
            else 35 if not macro_found
            else client.speed_retract|default(35) %}

  _CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*#     0.323397, 0.091151, -0.097394, -0.300922, -0.485720, -0.659281
#*#     0.392072, 0.164820, -0.024973, -0.228501, -0.432029, -0.604341
#*#     0.454504, 0.214766, 0.014984, -0.199782, -0.402061, -0.589357
#*#     0.520682, 0.279695, 0.074918, -0.146091, -0.359608, -0.558141
#*#     0.563136, 0.314657, 0.103637, -0.128610, -0.349619, -0.549401
#*#     0.598097, 0.337132, 0.116123, -0.127361, -0.357110, -0.574373
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 16.0
#*# max_x = 155.0
#*# min_y = 16.0
#*# max_y = 155.0
#*#
#*# [probe]
#*# z_offset = 2.870
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.696
#*# pid_ki = 1.649
#*# pid_kd = 116.325
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 75.282
#*# pid_ki = 1.930
#*# pid_kd = 733.998
