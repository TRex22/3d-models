# This file contains pin mappings for the Creality "v4.2.7" board running on
# a Ender 2 Pro.
# To use this config, during "make menuconfig" select the STM32F103 with
# a "28KiB bootloader" and serial (on USART1 PA10/PA9) communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PB9
dir_pin: PC2
enable_pin: !PC3
microsteps: 16
# rotation_distance: 40
# rotation_distance: 39.98001
rotation_distance: 40.327889724432
endstop_pin: ^PA5
position_endstop: -15
position_min: -15
position_max: 180
homing_speed: 120 #100

[stepper_y]
step_pin: PB7
dir_pin: PB8
enable_pin: !PC3
microsteps: 16
# rotation_distance: 40
# rotation_distance: 39.7
rotation_distance: 39.91214737125
endstop_pin: ^PA6
position_min: -5
position_endstop: -5
position_max: 170
homing_speed: 120 #100

[stepper_z]
# Creality:
step_pin: PB5
dir_pin: !PB6
enable_pin: !PC3
# Generic
# step_pin: PB6
# dir_pin: !PB5
# enable_pin: !PC3
microsteps: 16
# rotation_distance: 8
# rotation_distance: 7.92
# rotation_distance: 7.99128
rotation_distance: 7.9984072528173
position_max: 180
homing_speed: 10 #25 #20 #10

# KlackEnder Probe
# endstop_pin: ^PA7
#endstop_pin: probe:z_virtual_endstop #if you want to use the Probe as z-endstop (You can unsinstall the stock z endstop then. If not, remove the [homing_override])
endstop_pin: ^rpi:gpio12
#position_endstop: 0.0 #remove this or uncomment it with a #
# position_min: -8 # set a negative value (minimum as the probe z_offset)
position_min: -8.0 # -4.0
# second_homing_speed: 3
# homing_retract_dist: 2

[safe_z_home]
home_xy_position: -14.50,0 # Change coordinates to the center of your print bed
z_hop: 4.5 #5 #7               # Move up 10mm
z_hop_speed: 15 #10 # 5

# Need to override homing to safely detach probe and park head
[gcode_macro G28]
rename_existing: G28.1
gcode:
  G28.1
  # G1 Z10 F1000  # Lift Z to safe height, Not needed here since the print head moves up as part of z homing
  G1 X86 F6000  # Move to X86
  G1 X86 Y86 Z80 F6000  # Move to X86
  SHORT_BEEP

[delayed_gcode startup_beep]
initial_duration: 2.0
gcode:
  SET_PIN PIN=beeper VALUE=1
  G4 P200  # Wait 200ms
  SET_PIN PIN=beeper VALUE=0
  G4 P100  # Wait 200ms
  SET_PIN PIN=beeper VALUE=1
  G4 P200  # Wait 200ms
  SET_PIN PIN=beeper VALUE=0

# https://github.com/Klipper3d/klipper/blob/master/klippy/extras/temperature_sensors.cfg
# Definition from (20211101): https://www.keenovo.com/NTC-Thermistor-R-T-Table.pdf
# [thermistor Generic 3950]
# temperature1: 25
# resistance1: 100000
# temperature2: 150
# resistance2: 1770
# temperature3: 250
# resistance3: 230

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB3
dir_pin: PB4
enable_pin: !PC3
microsteps: 16
rotation_distance: 23.4045849
nozzle_diameter: 0.6 #0.400 # 0.600
filament_diameter: 1.750
heater_pin: PA1
# https://github.com/Klipper3d/klipper/blob/master/klippy/extras/temperature_sensors.cfg
# sensor_type: thermistor Generic 3950
sensor_type: Generic 3950
# sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
#pid_Kp: 29.634
#pid_Ki: 2.102
#pid_Kd: 104.459
# PID parameters: pid_Kp=28.358 pid_Ki=1.734 pid_Kd=115.913
# PID parameters: pid_Kp=27.731 pid_Ki=1.712 pid_Kd=112.312
# PID parameters: pid_Kp=27.328 pid_Ki=1.656 pid_Kd=112.727
#pid_Kp: 27.328
#pid_Ki: 1.656
#pid_kd: 112.727
min_temp: 0
max_temp: 250
#https://www.reddit.com/r/klippers/comments/zfu37v/print_failed_move_exceeds_maximum_extrusion/
# defaults to 4 * nozzle_diameter2
max_extrude_cross_section: 1.28 # 4 * 0.4 * 0.4 * 2
# SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE=0.003
pressure_advance = 0.001
# pressure_advance = 0.003
# Pressure Advance seemed to round corners, possibly need it off or a very small value
# 0.036 - 0.039 calculated
# pressure_advance = 0.036
# pressure_advance = 0.1804
# pressure_advance = 0.072
# pressure_advance = 0.55

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# PID parameters: pid_Kp=74.383 pid_Ki=1.626 pid_Kd=850.756
# PID parameters: pid_Kp=74.758 pid_Ki=1.634 pid_Kd=855.043
# PID parameters: pid_Kp=75.136 pid_Ki=1.659 pid_Kd=850.919
#pid_Kp: 75.136
#pid_Ki: 1.659
#pid_Kd: 850.919
min_temp: 0
max_temp: 90

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 500 #300
max_accel: 4000 #3500
max_z_velocity: 30 #20 #15 #10
max_z_accel: 200 #100

[display]
lcd_type: st7920
cs_pin: PB12
sclk_pin: PB13
sid_pin: PB15
encoder_pins: ^PB14, ^PB10 #^PB14, ^PA3
click_pin: ^!PB2

[filament_switch_sensor filament_sensor]
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#switch_pin:
# switch_pin: !PC6
switch_pin: ^PA4
# switch_pin: !PC15
#   The pin on which the switch is connected. This parameter must be
#   provided.

[output_pin beeper]
pin: PC6
value: 0
shutdown_value: 0

## Accelerometer Configuration for input_shaper
# https://www.klipper3d.org/Measuring_Resonances.html
# https://www.ifixit.com/Guide/Adding+ADXL345+Accelerometer/147745
# https://klipper.discourse.group/t/raspberry-pi-pico-adxl345-portable-resonance-measurement/1757
# https://www.reddit.com/r/klippers/comments/xqzpj1/how_to_wire_my_adxl343_correctly_to_my_raspberry/

[mcu rpi]
serial: /tmp/klipper_host_mcu

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

# Example1: A led strip controlled by the GPIO20 on the RPi
[led overhead_light]
# pin: rpi:gpio20
white_pin: rpi:gpio20
initial_WHITE: 1.0
# pwm: False
# value: 1
# hardware_pwm: True
# You can also write the pin in extended form by specifying
# the reference gpiochip.
#pin: host:gpiochip0/gpio20

[adxl345]
cs_pin: rpi:None
axes_map: x,y,-z
#spi_bus: spi0
#int_pin: 7
#int_pin: 26

[mpu9250]
i2c_mcu: rpi
i2c_bus: i2c.1

[resonance_tester]
accel_chip_x: adxl345
accel_chip_y: mpu9250

max_freq: 200  # Default is 133Hz, increasing gives better high-frequency data
min_freq: 5    # Start measuring from 5Hz
accel_per_hz: 75  # Default is 75, controls amplitude of excitation
hz_per_sec: 1    # Default is 1, controls speed of the test

# Optional but recommended parameters
# damping_ratio: 0.1  # Default is 0.1, helps with signal noise
max_smoothing: 0.10 # 0.05     # Lower values = less smoothing, more detail

probe_points:
  # Somewhere slightly above the middle of your print bed
  86,86,25
  #84,84,25
  # 60,120,20
  # 120,60,20
  #30,30,20
  #50,50,40

# [input_shaper]
# Recomputed with dual fans
# Going with = 80 mm/s as that was the max speed that Moonraker reported
# Should have been at 100 mm/s
#
# X:
# at 80 mm/s:  39.86710963
# at 100 mm/s: 49.83388704
# at 100 mm/s: 86.9565 # New
#
# Y:
# at 80 mm/s:  71.30124777 # Works?
# at 100 mm/s: 89.12655971
# at 100 mm/s: 97.7995 # New
#

# shaper_freq_x: 49.8339  # frequency for the X mark of the test model
# shaper_freq_y: 97.7995  # frequency for the Y mark of the test model
# shaper_type: mzv

# New 10 Aug 2023
#shaper_freq_x: 56.10098177  # frequency for the X mark of the test model
#shaper_freq_y: 84.88063660  # frequency for the Y mark of the test model
#shaper_type: mzv

[board_pins]
aliases:
  EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
  EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
  PROBE_IN=PB0,PROBE_OUT=PB1,FIL_RUNOUT=PC6

## ---------------------------------------------------------------------------##
## GCODE Macros
## https://github.com/strayr/strayr-k-macros/blob/main/linear_advance.cfg
# This is useful with slicers that kan send an M900 pressure advance instruction
# It's just a wrapper around SET_PRESSURE_ADVANCE

[gcode_macro short_beep]
description: Produce a short beep
gcode:
  SET_PIN PIN=beeper VALUE=1
  G4 P100  # Wait 100ms
  SET_PIN PIN=beeper VALUE=0

[gcode_macro M900]
description: Set Linear Advance
gcode:
  {% if 'K' in params %}
    SET_PRESSURE_ADVANCE ADVANCE={params.K|string}
    { action_respond_info("Pressure Advance set to " + params.K|string) }
  {% else %}
    SET_PRESSURE_ADVANCE
  {% endif %}

[gcode_macro M0]
description: Set Linear Advance
gcode:
  PAUSE

[gcode_macro PARK]
description: Park the machine for storage
gcode:
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=7000
  SET_VELOCITY_LIMIT ACCEL=4000
  SET_VELOCITY_LIMIT VELOCITY=500
  G28
  G1 X86 Y86 Z100

[gcode_macro AUTOMATIC_CALIBRATION]
description: Run all automatic calibration Codes
gcode:
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=7000
  SET_VELOCITY_LIMIT ACCEL=4000
  SET_VELOCITY_LIMIT VELOCITY=500
  G28
  G1 X75 Y75 Z1
  SHAPER_CALIBRATE AXIS=X
  SHAPER_CALIBRATE AXIS=Y
  PID_CALIBRATE HEATER=extruder TARGET=210
  PID_CALIBRATE HEATER=heater_bed TARGET=60
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
  G28
  G29
  # SAVE_CONFIG
  PARK

[gcode_macro PID_CALIBRATION]
description: PID CALIBRATE
gcode:
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=7000
  SET_VELOCITY_LIMIT ACCEL=4000
  SET_VELOCITY_LIMIT VELOCITY=500
  G28
  G1 X75 Y75 Z1
  PID_CALIBRATE HEATER=extruder TARGET=210
  PID_CALIBRATE HEATER=heater_bed TARGET=60

[gcode_macro TUNING_TOWER_INPUT_SHAPER]
description: Setup a Tuning Tower Print
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=58
  G28
  G29
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=7000
  SET_PRESSURE_ADVANCE ADVANCE=0
  SET_INPUT_SHAPER SHAPER_TYPE=MZV
  TUNING_TOWER COMMAND=SET_VELOCITY_LIMIT PARAMETER=ACCEL START=6500 STEP_DELTA=500 STEP_HEIGHT=5

##################################
## Add this to your printer.cfg ##
##################################
#####################################################################
# KlackEnder- Settings
#####################################################################

# !! Change your Z endstop pin from 'endstop_pin: Pin123' to 'endstop_pin: probe:z_virtual_endstop'
# !! Also add in [stepper_y] 'position_min: -8'. Idk why but most configs mave this wrong. For the Stock Ender 3 the homed Y position is -8.

[probe]
pin: ^PA7 #^PC14 #Probe-Stop Connection on Skr Mini E3 V1.2
#z_offset = 2.240 # 2.105 #2.4 #2.450 #0 #Measure per your specific setup
z_offset = 3.5
x_offset: -4 # negative = left of the nozzle
y_offset: 21 # negative = in front of of the nozzle
speed: 5.0
lift_speed: 15.0
sample_retract_dist: 1
samples: 2
samples_tolerance: 0.05
samples_tolerance_retries: 3 # 5

##[(7x7)-1] / 2 = 24
##[(5x5)-1] / 2 = 12
[bed_mesh]
speed: 300 #600 #300
horizontal_move_z: 8 #5 #4 #3.5 #4 #2
mesh_min: 16,16
mesh_max: 165,160 #156,156
probe_count: 5,5 # 6,6
# relative_reference_index: 12 # Deprecated
algorithm: bicubic # lagrange
fade_start: 1
fade_end: 10
#fade_target:
#   The z position in which fade should converge. When this value is set
#   to a non-zero value it must be within the range of z-values in the mesh.
#   Users that wish to converge to the z homing position should set this to 0.
#   Default is the average z value of the mesh.
split_delta_z: 0.015
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
move_check_distance: 3
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
mesh_pps: 2,2 #4,4
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.
# BED_MESH_CALIBRATE ADAPTIVE=1
adaptive_margin: 2 # 5

[delayed_gcode bed_mesh_init]
initial_duration: .01
gcode:
  BED_MESH_PROFILE LOAD=default

# [homing_override]
# set_position_z:0 # Make printer think Z axis is at zero, so we can force a move upwards away from build plate
# axes:z # We only want to override homing the z-axis
# gcode:
  # G90
  # G1 Z25 F3000 ; move up to prevent accidentally scratching build plate
  # G28 X
  # G28 Y
  # PROBE_OUT # Disabled for strain guage
  # G1 X80 Y60 F6000
  # G28 Z
  # PROBE_IN # Disabled for strain guage

#####################################################################
# KlackEnder - Macros
#####################################################################
# Simple way to include all the various klack macros and configurations
# https://github.com/Harrypulvirenti/Klack-Probe-Macros

[include ./klack-variables.cfg]                #Required
[include ./klack-macros.cfg]                   #Required
[include ./klack-bed-mesh-calibrate.cfg]       #bed mesh, requires klipper configuration
#[include ./klack-adaptive-bed-mesh-calibrate.cfg] #Adaptive bed mesh, requires klipper configuration and slicer configuration
#[include ./klack-screws-tilt-calculate.cfg]   #help adjust bed screws automatically, requires klipper configuration

[gcode_macro PROBE_OUT]
gcode:
  #ATTACH_PROBE
  M118 ATTACH_PROBE

[gcode_macro PROBE_IN]
gcode:
  #DOCK_PROBE
  M118 DOCK_PROBE

# Custom macros
[gcode_macro CALIBRATE_XY]
gcode:
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=7000
  SET_VELOCITY_LIMIT ACCEL=4500
  SET_VELOCITY_LIMIT VELOCITY=500
  G1 X75 Y75 Z1

  SHAPER_CALIBRATE AXIS=X
  SHAPER_CALIBRATE AXIS=y

  SET_VELOCITY_LIMIT ACCEL=3000
  SET_VELOCITY_LIMIT VELOCITY=500

[gcode_macro AUTO_BED_MESH]
gcode:
  SET_VELOCITY_LIMIT ACCEL=1000
  PROBE_OUT # Disabled for strain guage
  G1 Z19
  G1 X15
  BED_MESH_CALIBRATE
  #G1 Y0 F20000
  PROBE_IN # Disabled for strain guage

[gcode_macro PURGE_NOZZLE]
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=230 #Good for PLA and PETG
  SET_VELOCITY_LIMIT ACCEL=3000
  G28
  G1 X80 Y100 Z50
  G1 E100 F360
  G1 E100 F800
  G28 # Do a wipe

[gcode_macro Accuracy_Test]
gcode:
  PROBE_OUT
  G1 Z25
  G1 X25
  G90
  G1 Y80 X80 F20000
  PROBE_ACCURACY
  PROBE_IN

#####################################################################
# KlackEnder- Menu - Only if you have a display installed!
#####################################################################

[menu __main]
type: list
name: Main

[menu __main __KlackEnder]
type: list
enable: True
name: KlackEnder

[menu __main __KlackEnder __ProbeOut]
type: command
name: Probe Out
gcode:
  PROBE_OUT

[menu __main __KlackEnder __ProbeIn]
type: command
name: Probe In
gcode:
  PROBE_IN

[menu __main __KlackEnder __AutoBedMesh]
type: command
name: Auto Bed Mesh
gcode:
  G28
  AUTO_BED_MESH

[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[pause_resume]

[display_status]

[gcode_macro Nozzle_Level]
gcode:
  G1 X85 Y85 Z1 F20000

[gcode_macro CANCEL_PRINT]
  description: Cancel the actual running print
  rename_existing: CANCEL_PRINT_BASE
  gcode:
    #TURN_OFF_HEATERS
    M106 S0
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{printer[printer.toolhead.extruder].target}"

  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
variable_last_extruder_temp: 0
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set sp_move        = velocity if not macro_found else client.speed_move|default(velocity) %}
  ##### end of definitions #####
  M109 S{last_extruder_temp}

  _CLIENT_EXTRUDE
  RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}

# Usage: SET_PAUSE_NEXT_LAYER [ENABLE=[0|1]] [MACRO=<name>]
[gcode_macro SET_PAUSE_NEXT_LAYER]
description: Enable a pause if the next layer is reached
gcode:
  {% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
  {% set ENABLE = params.ENABLE | default(1) | int != 0 %}
  {% set MACRO = params.MACRO | default(pause_next_layer.call, True) %}
  SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

# Usage: SET_PAUSE_AT_LAYER [ENABLE=[0|1]] [LAYER=<number>] [MACRO=<name>]
[gcode_macro SET_PAUSE_AT_LAYER]
description: Enable/disable a pause if a given layer number is reached
gcode:
  {% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
  {% set ENABLE = params.ENABLE | int != 0 if params.ENABLE is defined
             else params.LAYER is defined %}
  {% set LAYER = params.LAYER | default(pause_at_layer.layer) | int %}
  {% set MACRO = params.MACRO | default(pause_at_layer.call, True) %}
  SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

# Usage: SET_PRINT_STATS_INFO [TOTAL_LAYER=<total_layer_count>] [CURRENT_LAYER= <current_layer>]
[gcode_macro SET_PRINT_STATS_INFO]
rename_existing: SET_PRINT_STATS_INFO_BASE
description: Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer: { 'enable': False, 'call': "PAUSE" }
gcode:
  {% if pause_next_layer.enable %}
    {action_respond_info("%s, forced by pause_next_layer" % pause_next_layer.call)}
    {pause_next_layer.call} ; execute the given gcode to pause, should be either M600 or PAUSE
    SET_PAUSE_NEXT_LAYER ENABLE=0
  {% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
    {action_respond_info("%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer))}
    {pause_at_layer.call} ; execute the given gcode to pause, should be either M600 or PAUSE
    SET_PAUSE_AT_LAYER ENABLE=0
  {% endif %}
  SET_PRINT_STATS_INFO_BASE {rawparams}

##### internal use #####
[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set use_custom     = False if not macro_found
                     else False if client.use_custom_pos is not defined
                     else True  if client.use_custom_pos|lower == 'true'
                     else False %}
  {% set custom_park_x  = 0.0 if not macro_found else client.custom_park_x|default(0.0) %}
  {% set custom_park_y  = 0.0 if not macro_found else client.custom_park_y|default(0.0) %}
  {% set park_dz        = 2.0 if not macro_found else client.custom_park_dz|default(2.0)|abs %}
  {% set sp_hop         = 900  if not macro_found else client.speed_hop|default(15) * 60 %}
  {% set sp_move        = velocity * 60 if not macro_found else client.speed_move|default(velocity) * 60 %}
  ##### get config and toolhead values #####
  {% set origin    = printer.gcode_move.homing_origin %}
  {% set act       = printer.gcode_move.gcode_position %}
  {% set max       = printer.toolhead.axis_maximum %}
  {% set cone      = printer.toolhead.cone_start_z|default(max.z) %} ; height as long the toolhead can reach max and min of an delta
  {% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
                else False %}
  ##### define park position #####
  {% set z_min = params.Z_MIN|default(0)|float %}
  {% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
  {% set x_park = params.X       if params.X is defined
             else custom_park_x  if use_custom
             else 0.0            if round_bed
             else (max.x - 5.0) %}
  {% set y_park = params.Y       if params.Y is defined
             else custom_park_y  if use_custom
             else (max.y - 5.0)  if round_bed and z_park < cone
             else 0.0            if round_bed
             else (max.y - 5.0) %}
  ##### end of definitions #####
  _CLIENT_RETRACT
  {% if "xyz" in printer.toolhead.homed_axes %}
    G90
    G1 Z{z_park} F{sp_hop}
    G1 X{x_park} Y{y_park} F{sp_move}
    {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description: Extrudes, if the extruder is hot enough
gcode:
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set use_fw_retract = False if not macro_found
                     else False if client.use_fw_retract is not defined
                     else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
                     else False %}

  {% set length = (params.LENGTH|float) if params.LENGTH is defined
             else 1.0 if not macro_found
             else client.unretract|default(1.0) %}

  {% set speed = params.SPEED if params.SPEED is defined
            else 35 if not macro_found
            else client.speed_unretract|default(35) %}

  {% set absolute_extrude = printer.gcode_move.absolute_extrude %}

  {% if printer.extruder.can_extrude %}
    {% if use_fw_retract %}
      {% if length < 0 %}
        G10
      {% else %}
        G11
      {% endif %}
    {% else %}
      M83
      G1 E{length} F{(speed|float|abs) * 60}
      {% if absolute_extrude %}
        M82
      {% endif %}
    {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

[gcode_macro _CLIENT_RETRACT]
description: Retracts, if the extruder is hot enough
gcode:
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}

  {% set length = (params.LENGTH|float) if params.LENGTH is defined
             else 1.0 if not macro_found
             else client.retract|default(1.0) %}

  {% set speed = params.SPEED if params.SPEED is defined
            else 35 if not macro_found
            else client.speed_retract|default(35) %}

  _CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro HEAT_CYCLE_BED]
description: Heat cycles the bed to help settle printing glue (60°C → cool → 65°C → cool → 70°C → cool)
gcode:
  {% set cooldown_temp = params.COOLDOWN_TEMP|default(30)|int %}
  {% set dwell_time = params.DWELL_TIME|default(180)|int %}  # Time to stay at target temp in seconds
  {% set cooldown_time = params.COOLDOWN_TIME|default(120)|int %}  # Time to cool down in seconds

  M117 Heat Cycle: Starting bed heat cycle
  M118 Heat Cycle: Starting bed heat cycle process

  # First cycle - 60°C
  M117 Heat Cycle: Heating to 60C
  M118 Heat Cycle: Heating bed to 60C
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60

  # Wait for bed to reach temperature
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=59 MAXIMUM=61

  # Dwell at temperature
  M117 Heat Cycle: Dwelling at 60C
  M118 Heat Cycle: Dwelling at 60C for {dwell_time} seconds
  G4 P{dwell_time * 1000}

  # Cool down
  M117 Heat Cycle: Cooling from 60C
  M118 Heat Cycle: Cooling bed from 60C
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={cooldown_temp}
  G4 P{cooldown_time * 1000}

  # Second cycle - 65°C
  M117 Heat Cycle: Heating to 65C
  M118 Heat Cycle: Heating bed to 65C
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=65

  # Wait for bed to reach temperature
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=64 MAXIMUM=66

  # Dwell at temperature
  M117 Heat Cycle: Dwelling at 65C
  M118 Heat Cycle: Dwelling at 65C for {dwell_time} seconds
  G4 P{dwell_time * 1000}

  # Cool down
  M117 Heat Cycle: Cooling from 65C
  M118 Heat Cycle: Cooling bed from 65C
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={cooldown_temp}
  G4 P{cooldown_time * 1000}

  # Third cycle - 70°C
  M117 Heat Cycle: Heating to 70C
  M118 Heat Cycle: Heating bed to 70C
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=70

  # Wait for bed to reach temperature
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=69 MAXIMUM=71

  # Dwell at temperature
  M117 Heat Cycle: Dwelling at 70C
  M118 Heat Cycle: Dwelling at 70C for {dwell_time} seconds
  G4 P{dwell_time * 1000}

  # Final cool down
  M117 Heat Cycle: Final cooldown
  M118 Heat Cycle: Final bed cooldown
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={cooldown_temp}

  M117 Heat Cycle: Complete
  M118 Heat Cycle: Bed heat cycling process complete

# Automated Pressure Advance
# https://github.com/SphaeroX/Klipper-Pressure-advance-Macro
# https://www.reddit.com/r/klippers/comments/12oppdx/automatic_pressure_advance_script/
# Just need BOWDEN_LENGTH
# Add to start GCODE: `CALCULATE_PA BOWDEN_LENGTH=34.0 MATERIAL=[filament_type] LAYER_HEIGHT=[layer_height] NOZZLE_SIZE=[nozzle_diameter] PRINT_SPEED=[perimeter_speed] FILAMENT_DIAMETER=[filament_diameter] LINE_WIDTH=[line_width]`
# Example: `CALCULATE_PA BOWDEN_LENGTH=34.7 MATERIAL=PLA LAYER_HEIGHT=0.2 NOZZLE_SIZE=0.4 PRINT_SPEED=100 FILAMENT_DIAMETER=1.75 LINE_WIDTH=0.45 ; auto pressure advance`
#
# MEASUREMENT: I would take the distance from the extruder drive to the beginning of the nozzle,
#   but only to the beginning where the filament is still solid.
#
# BOWDEN_LENGTH in centimeters
# LAYER_HEIGHT and NOZZLE_SIZE in millimeters
# PRINT_SPEED in millimeters per second
[gcode_macro CALCULATE_PA]
gcode:
    {% set material = params.MATERIAL|default("PLA") %}
    {% set bowden_length_cm = params.BOWDEN_LENGTH|default(0.4)|float %} #use 75% of the retraction length for direct drive
    {% set bowden_length_dm = bowden_length_cm / 10 %}  # Convert cm to decimeters for consistency
    {% set layer_height = params.LAYER_HEIGHT|default(0.4)|float %}
    {% set nozzle_size = params.NOZZLE_SIZE|default(0.6)|float %}
    {% set line_width = params.LINE_WIDTH|default(nozzle_size * 1.2)|float %}
    {% set print_speed = params.PRINT_SPEED|default(60)|float %}
    {% set filament_diameter = params.FILAMENT_DIAMETER|default(1.75)|float %}
    {% set filament_area = 3.14159 * (filament_diameter / 2) ** 2 %}
    {% set flow_rate = line_width * layer_height * print_speed %}
    {% set material_constant = {
        'PLA': 85,
        'PET': 100,
        'PETG': 100,
        'ABS': 95,
        'TPU': 140,
        'NYLON': 120,
        'ASA': 100,
        'PVB': 85,
        'PA': 120,
        'FLEX': 140,
        'PVB': 100
    }[material] %}
    {% set pressure_advance = (flow_rate * bowden_length_dm) / (material_constant * filament_area) %}
    SET_PRESSURE_ADVANCE ADVANCE={pressure_advance}

#[include shell_command.cfg]
#z_offset = 2.075
#z_offset = 1.850
#z_offset = 2.095

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*#   -3.792351, -3.809848, -3.797350, -3.793601, -3.763607
#*#   -3.801099, -3.823595, -3.806098, -3.813597, -3.793601
#*#   -3.769856, -3.799850, -3.793601, -3.808598, -3.789852
#*#   -3.798600, -3.818596, -3.804849, -3.812347, -3.793601
#*#   -3.821095, -3.861087, -3.849840, -3.852339, -3.833593
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 16.0
#*# max_x = 165.0
#*# min_y = 16.0
#*# max_y = 160.0
#*#
#*# [probe]
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.384
#*# pid_ki = 1.146
#*# pid_kd = 119.259
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 74.845
#*# pid_ki = 1.647
#*# pid_kd = 850.422
#*#
#*# [input_shaper]
#*# shaper_type_y = mzv
#*# shaper_freq_y = 149.8
#*# shaper_type_x = mzv
#*# shaper_freq_x = 45.2
#*#
#*# [stepper_z]
#*# position_endstop = -1.610
